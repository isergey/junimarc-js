{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///junimarc.js","webpack:///webpack/bootstrap 2a1d3f80de3e0a5f238e","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","Leader","data","_data","Subfield","constructor","Error","_id","_validateSubfieldIdArg","DataSubfield","ExtendedSubfield","fields","_fields","_validateFieldsArg","Field","tag","_tag","_validateTagArg","ControlField","DataField","i1","i2","subfields","_i1","_i2","_subfields","_validateIndicatorArg","_validateSubfieldsArg","Record","leader","_leader","ind","length","Array","isArray","i","_subfield","_field","_getFields","_i","getTag","push","_findFields","regexp","re","RegExp","match","_buildFieldsIndex","index","_existFields","_buildSubfieldsIndex","getId","_existsubfields","Object","defineProperty","value","prototype","getData","setData","newData","create","toJson","d","fromJson","json","getFields","findFields","addField","field","removeField","fieldIndex","indexOf","splice","getFieldsIndex","cf","df","setInd1","setInd2","setSubfields","getSubfields","__subfield","addSubfield","subfield","removeSubfield","sfIndex","getSubfieldData","getSubfieldsIndex","sf","esf","setLeader","getLeader","setFields","l","callback","JSON","parse","_error","e","record"],"mappings":"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","file":"junimarc.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Junimarc\"] = factory();\n\telse\n\t\troot[\"Junimarc\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Junimarc\"] = factory();\n\telse\n\t\troot[\"Junimarc\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Marc leader\n\t * @param {String} data\n\t * @constructor\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tfunction Leader(data) {\n\t  this._data = data || '';\n\t}\n\t\n\tLeader.prototype.getData = function () {\n\t  return this._data;\n\t};\n\t\n\tLeader.prototype.setData = function (newData) {\n\t  this._data = newData || '';\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abstrcat class for subfield\n\t * @param {String} id\n\t */\n\tfunction Subfield(id) {\n\t  if (this.constructor === Subfield) {\n\t    throw new Error(\"Can't instantiate abstract class\");\n\t  }\n\t\n\t  this._id = id || '';\n\t\n\t  _validateSubfieldIdArg(this._id);\n\t}\n\t\n\tSubfield.prototype.getId = function () {\n\t  return this._id;\n\t};\n\t\n\t/**\n\t * Data subfield in marc field\n\t * @param {String} id\n\t * @param {String} data\n\t * @constructor\n\t */\n\tfunction DataSubfield(id, data) {\n\t  Subfield.call(this, id);\n\t  this._data = data || '';\n\t}\n\t\n\tDataSubfield.prototype = Object.create(Subfield.prototype);\n\tDataSubfield.prototype.constructor = DataSubfield;\n\t\n\tDataSubfield.prototype.getData = function () {\n\t  return this._data;\n\t};\n\t\n\tDataSubfield.prototype.setData = function (data) {\n\t  this._data = data || '';\n\t  return this;\n\t};\n\t\n\tDataSubfield.prototype.toJson = function () {\n\t  return {\n\t    id: this.getId(),\n\t    d: this._data\n\t  };\n\t};\n\t\n\tDataSubfield.fromJson = function (json) {\n\t  if (!json.id) {\n\t    throw new Error('DataSubfield required json id does not exist');\n\t  }\n\t\n\t  return new DataSubfield(json.id, json.d);\n\t};\n\t\n\t/**\n\t * Extended subfield\n\t * @param {String} id\n\t * @param {Array} fields\n\t * @constructor\n\t */\n\tfunction ExtendedSubfield(id, fields) {\n\t  Subfield.call(this, id);\n\t\n\t  this._fields = fields || [];\n\t\n\t  _validateFieldsArg(this._fields);\n\t}\n\t\n\tExtendedSubfield.prototype = Object.create(Subfield.prototype);\n\tExtendedSubfield.prototype.constructor = ExtendedSubfield;\n\t\n\tExtendedSubfield.prototype.getId = function () {\n\t  return this._id;\n\t};\n\t\n\tExtendedSubfield.prototype.getFields = function (tag) {\n\t  return _getFields(this._fields, tag);\n\t};\n\t\n\tExtendedSubfield.prototype.findFields = function (regexp) {\n\t  return _findFields(this._fields, regexp);\n\t};\n\t\n\tExtendedSubfield.prototype.addField = function (field) {\n\t  this._fields.push(field);\n\t  return this;\n\t};\n\t\n\tExtendedSubfield.prototype.removeField = function (field) {\n\t  var fieldIndex = this._fields.indexOf(field);\n\t  if (fieldIndex > -1) {\n\t    this._fields.splice(fieldIndex, 1);\n\t  }\n\t  return this;\n\t};\n\t\n\tExtendedSubfield.prototype.getFieldsIndex = function () {\n\t  return _buildFieldsIndex(this._fields);\n\t};\n\t\n\tExtendedSubfield.prototype.toJson = function () {\n\t  var cf = [];\n\t  var df = [];\n\t  for (var i = 0; i < this._fields.length; i++) {\n\t    var _field = this._fields[i];\n\t    if (_field instanceof DataField) {\n\t      df.push(_field);\n\t    } else {\n\t      cf.push(_field);\n\t    }\n\t  }\n\t  return {\n\t    id: this.getId(),\n\t    cf: cf,\n\t    df: df\n\t  };\n\t};\n\t\n\tExtendedSubfield.fromJson = function (json) {\n\t  var fields = [];\n\t  var cf = json.cf || [];\n\t  var df = json.df || [];\n\t  var i = 0;\n\t\n\t  if (!Array.isArray(cf)) {\n\t    throw new Error('ExtendedSubfield json property cf must be array');\n\t  }\n\t\n\t  if (!Array.isArray(df)) {\n\t    throw new Error('ExtendedSubfield json property df must be array');\n\t  }\n\t\n\t  for (i = 0; i < cf.length; i++) {\n\t    fields.push(ControlField.fromJson(cf[i]));\n\t  }\n\t\n\t  for (i = 0; i < df.length; i++) {\n\t    fields.push(DataField.fromJson(df[i]));\n\t  }\n\t\n\t  return new ExtendedSubfield(json.id, fields);\n\t};\n\t\n\t/**\n\t * Abstract class for field\n\t * @param {String} tag\n\t * @param {String} data\n\t * @constructor\n\t */\n\tfunction Field(tag) {\n\t  if (this.constructor === Field) {\n\t    throw new Error(\"Can't instantiate abstract class\");\n\t  }\n\t\n\t  this._tag = tag || '';\n\t  _validateTagArg(this._tag);\n\t}\n\t\n\tField.prototype.getTag = function () {\n\t  return this._tag;\n\t};\n\t\n\t/**\n\t * Marc control filed\n\t * @param {String} tag\n\t * @param {String} data\n\t * @constructor\n\t */\n\tfunction ControlField(tag, data) {\n\t  Field.call(this, tag);\n\t  this._data = data || '';\n\t}\n\t\n\tControlField.prototype = Object.create(Field.prototype);\n\tControlField.prototype.constructor = ControlField;\n\t\n\tControlField.prototype.getData = function () {\n\t  return this._data;\n\t};\n\t\n\tControlField.prototype.setData = function (data) {\n\t  this._data = data || '';\n\t  return this;\n\t};\n\t\n\tControlField.prototype.toJson = function () {\n\t  return {\n\t    tag: this.getTag(),\n\t    d: this._data\n\t  };\n\t};\n\t\n\tControlField.fromJson = function (json) {\n\t  if (!json.tag) {\n\t    throw new Error('ControlField required json property tag does not exist');\n\t  }\n\t  return new ControlField(json.tag, json.d);\n\t};\n\t\n\t/**\n\t * Field with subfields\n\t * @param {String} tag\n\t * @param {String} i1\n\t * @param {String} i2\n\t * @param {String} subfields\n\t * @constructor\n\t */\n\tfunction DataField(tag, i1, i2, subfields) {\n\t  Field.call(this, tag);\n\t\n\t  this._i1 = i1 || ' ';\n\t  this._i2 = i2 || ' ';\n\t  this._subfields = subfields || [];\n\t\n\t  _validateIndicatorArg(this._i1);\n\t  _validateIndicatorArg(this._i2);\n\t  _validateSubfieldsArg(this._subfields);\n\t}\n\t\n\tDataField.prototype = Object.create(Field.prototype);\n\tDataField.prototype.constructor = DataField;\n\t\n\tDataField.prototype.setInd1 = function (ind) {\n\t  this._i1 = ind || ' ';\n\t  _validateIndicatorArg(this._i1);\n\t  return this;\n\t};\n\t\n\tDataField.prototype.setInd2 = function (ind) {\n\t  this._i2 = ind || ' ';\n\t  _validateIndicatorArg(this._i2);\n\t  return this;\n\t};\n\t\n\tDataField.prototype.setSubfields = function (subfields) {\n\t  this._subfields = subfields || [];\n\t  _validateSubfieldsArg(this._subfields);\n\t  return this;\n\t};\n\t\n\tDataField.prototype.getSubfields = function (id) {\n\t  if (id) {\n\t    var _subfields = [];\n\t    var _i = 0;\n\t    for (_i = 0; _i < this._subfields.length; _i++) {\n\t      var __subfield = this._subfields[_i];\n\t      if (__subfield.getId() === id) {\n\t        _subfields.push(__subfield);\n\t      }\n\t    }\n\t    return _subfields;\n\t  }\n\t  return this._subfields;\n\t};\n\t\n\tDataField.prototype.addSubfield = function (subfield) {\n\t  if (!(subfield instanceof Subfield)) {\n\t    throw new Error('subfield must be Subfield instance');\n\t  }\n\t\n\t  this._subfields.push(subfield);\n\t  return this;\n\t};\n\t\n\tDataField.prototype.removeSubfield = function (subfield) {\n\t  var sfIndex = this._subfields.indexOf(subfield);\n\t  if (sfIndex > -1) {\n\t    subfield.splice(sfIndex, 1);\n\t  }\n\t  return this;\n\t};\n\t\n\tDataField.prototype.getSubfieldData = function (id) {\n\t  var data = [];\n\t  var i = 0;\n\t  for (i = 0; i < this._subfields.length; i++) {\n\t    var _subfield = this._subfields[i];\n\t    if (_subfield instanceof DataSubfield && _subfield.getId() === id) {\n\t      data.push(_subfield.getData());\n\t    }\n\t  }\n\t  return data;\n\t};\n\t\n\tDataField.prototype.getSubfieldsIndex = function () {\n\t  return _buildSubfieldsIndex(this._subfields);\n\t};\n\t\n\tDataField.prototype.toJson = function () {\n\t  var sf = [];\n\t  var esf = [];\n\t  var i = 0;\n\t\n\t  for (i = 0; i < this._subfields.length; i++) {\n\t    var _subfield = this._subfields[i];\n\t    if (_subfield instanceof DataSubfield) {\n\t      sf.push(_subfield);\n\t    } else {\n\t      esf.push(_subfield);\n\t    }\n\t  }\n\t\n\t  return {\n\t    tag: this.getTag(),\n\t    i1: this._i1,\n\t    i2: this._i2,\n\t    sf: sf,\n\t    esf: esf\n\t  };\n\t};\n\t\n\tDataField.fromJson = function (json) {\n\t  var subfields = [];\n\t  var sf = json.sf || [];\n\t  var esf = json.esf || [];\n\t  var i = 0;\n\t\n\t  if (!Array.isArray(sf)) {\n\t    throw new Error('DataField json property sf must be array');\n\t  }\n\t\n\t  if (!Array.isArray(esf)) {\n\t    throw new Error('DataField json property esf must be array');\n\t  }\n\t\n\t  for (i = 0; i < sf.length; i++) {\n\t    subfields.push(DataSubfield.fromJson(sf[i]));\n\t  }\n\t\n\t  for (i = 0; i < esf.length; i++) {\n\t    subfields.push(ExtendedSubfield.fromJson(esf[i]));\n\t  }\n\t\n\t  return new DataField(json.tag, json.i1, json.i2, subfields);\n\t};\n\t\n\t/**\n\t *\n\t * @param {Leader} leader\n\t * @param {Array} fields\n\t * @constructor\n\t */\n\tfunction Record(leader, fields) {\n\t  this._leader = leader || new Leader();\n\t  this._fields = fields || [];\n\t\n\t  _validateFieldsArg(this._fields);\n\t}\n\t\n\tRecord.prototype.setLeader = function (leader) {\n\t  this._leader = leader;\n\t  return this;\n\t};\n\t\n\tRecord.prototype.getLeader = function () {\n\t  return this._leader;\n\t};\n\t\n\tRecord.prototype.setFields = function (fields) {\n\t  _validateFieldsArg(fields);\n\t  this._fields = fields;\n\t  return this;\n\t};\n\t\n\tRecord.prototype.getFields = function (tag) {\n\t  return _getFields(this._fields, tag);\n\t};\n\t\n\tRecord.prototype.findFields = function (regexp) {\n\t  return _findFields(this._fields, regexp);\n\t};\n\t\n\tRecord.prototype.addField = function (field) {\n\t  if (!(field instanceof Field)) {\n\t    throw new Error('field must be ControlField or DataField instance');\n\t  }\n\t  this._fields.push(field);\n\t  return this;\n\t};\n\t\n\tRecord.prototype.removeField = function (field) {\n\t  if (!(field instanceof Field)) {\n\t    throw new Error('field must be ControlField or DataField instance');\n\t  }\n\t  var fieldIndex = this._fields.indexOf(field);\n\t  if (fieldIndex > -1) {\n\t    this._fields.splice(fieldIndex, 1);\n\t  }\n\t  return this;\n\t};\n\t\n\tRecord.prototype.getFieldsIndex = function () {\n\t  return _buildFieldsIndex(this._fields);\n\t};\n\t\n\tRecord.prototype.toJson = function () {\n\t  var cf = [];\n\t  var df = [];\n\t  var i = 0;\n\t\n\t  for (i = 0; i < this._fields.length; i++) {\n\t    var _field = this._fields[i];\n\t    if (_field instanceof DataField) {\n\t      df.push(_field);\n\t    } else {\n\t      cf.push(_field);\n\t    }\n\t  }\n\t\n\t  return {\n\t    l: this._leader.getData(),\n\t    cf: cf,\n\t    df: df\n\t  };\n\t};\n\t\n\t/**\n\t * @param {String|Object} json\n\t * @param {Function} callback - fn(record, error)\n\t * @return {Record|null}\n\t * @throw {Error} if no callback\n\t */\n\tRecord.fromJson = function (json, callback) {\n\t  if (typeof json === 'string') {\n\t    json = JSON.parse(json);\n\t  }\n\t\n\t  if (typeof json !== 'object') {\n\t    json = JSON.parse(json);\n\t    var _error = new Error('json must be object or string instance');\n\t    if (typeof callback === 'function') {\n\t      callback(null, _error);\n\t      return null;\n\t    } else {\n\t      throw _error;\n\t    }\n\t  }\n\t\n\t  var leader = new Leader(json.l);\n\t  var fields = [];\n\t  var cf = json.cf || [];\n\t  var df = json.df || [];\n\t  var i = 0;\n\t\n\t  try {\n\t    if (!Array.isArray(cf)) {\n\t      throw new Error('Record json property cf must be array');\n\t    }\n\t\n\t    if (!Array.isArray(df)) {\n\t      throw new Error('Record json property df must be array');\n\t    }\n\t\n\t    for (i = 0; i < cf.length; i++) {\n\t      fields.push(ControlField.fromJson(cf[i]));\n\t    }\n\t\n\t    for (i = 0; i < df.length; i++) {\n\t      fields.push(DataField.fromJson(df[i]));\n\t    }\n\t  } catch (e) {\n\t    if (typeof callback === 'function') {\n\t      callback(null, e);\n\t      return null;\n\t    } else {\n\t      throw _error;\n\t    }\n\t  }\n\t\n\t  if (typeof callback === 'function') {\n\t    callback(record, null);\n\t  }\n\t  var record = new Record(leader, fields);\n\t  return record;\n\t};\n\t\n\tfunction _validateTagArg(tag) {\n\t  if (typeof tag !== 'string' || !tag) {\n\t    throw new Error('Field must have String tag');\n\t  }\n\t}\n\t\n\tfunction _validateIndicatorArg(ind) {\n\t  if (typeof ind !== 'string' || ind.length !== 1) {\n\t    throw new Error('DataField indicator must be String from one symbol');\n\t  }\n\t}\n\t\n\tfunction _validateSubfieldsArg(subfields) {\n\t  if (!Array.isArray(subfields)) {\n\t    throw new Error('DataField subfields must be Array instance');\n\t  }\n\t\n\t  var i = 0;\n\t\n\t  for (i = 0; i < subfields.length; i++) {\n\t    var _subfield = subfields[i];\n\t    if (!(_subfield instanceof Subfield)) {\n\t      throw new Error('Subfield at index ' + i + ' must be DataSubfield or ExtendedSubfield instance');\n\t    }\n\t  }\n\t}\n\t\n\tfunction _validateSubfieldIdArg(id) {\n\t  if (typeof id !== 'string' || !id) {\n\t    throw new Error('DataSubfield must have id');\n\t  }\n\t}\n\t\n\tfunction _validateFieldsArg(fields) {\n\t  if (!Array.isArray(fields)) {\n\t    throw new Error('Fields of extended subfield must be Array instance');\n\t  }\n\t\n\t  var i = 0;\n\t\n\t  for (i = 0; i < fields.length; i++) {\n\t    var _field = fields[i];\n\t    if (!(_field instanceof Field)) {\n\t      throw new Error('Field at index ' + i + ' must be ControlField or DataField instance');\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t *\n\t * @param {Array} fields\n\t * @param {String} tag - filter\n\t * @returns {{String: Array}}\n\t */\n\tfunction _getFields(fields, tag) {\n\t  if (tag) {\n\t    var _fields = [];\n\t    for (var _i = 0; _i < fields.length; _i++) {\n\t      var _field = fields[_i];\n\t      if (_field.getTag() === tag) {\n\t        _fields.push(_field);\n\t      }\n\t    }\n\t    return _fields;\n\t  }\n\t  return fields;\n\t}\n\t\n\t/**\n\t *\n\t * @param {Array} fields\n\t * @param {String|Regexp} regexp - rag regexp\n\t * @returns {{String: Array}}\n\t */\n\tfunction _findFields(fields, regexp) {\n\t  var re = regexp;\n\t  if (!(re instanceof RegExp)) {\n\t    re = new RegExp(re);\n\t  }\n\t\n\t  var _fields = [];\n\t  for (var _i = 0; _i < fields.length; _i++) {\n\t    var _field = fields[_i];\n\t    if (Array.isArray(_field.getTag().match(re))) {\n\t      _fields.push(_field);\n\t    }\n\t  }\n\t  return _fields;\n\t}\n\t\n\t/**\n\t *\n\t * @param {Array} fields\n\t * @returns {{String: Array}}\n\t */\n\tfunction _buildFieldsIndex(fields) {\n\t  var index = {};\n\t  var i = 0;\n\t  for (i = 0; i < fields.length; i++) {\n\t    var _field = fields[i];\n\t    var _tag = _field.getTag();\n\t    var _existFields = index[_tag];\n\t\n\t    if (!_existFields) {\n\t      _existFields = [];\n\t      index[_tag] = _existFields;\n\t    }\n\t    _existFields.push(_field);\n\t  }\n\t  return index;\n\t}\n\t\n\t/**\n\t *\n\t * @param subfields\n\t * @returns {{String: Array}}\n\t */\n\tfunction _buildSubfieldsIndex(subfields) {\n\t  var index = {};\n\t  var i = 0;\n\t  for (i = 0; i < subfields.length; i++) {\n\t    var _subfield = subfields[i];\n\t    var _id = _subfield.getId();\n\t    var _existsubfields = index[_id];\n\t\n\t    if (!_existsubfields) {\n\t      _existsubfields = [];\n\t      index[_id] = _existsubfields;\n\t    }\n\t\n\t    _existsubfields.push(_subfield);\n\t  }\n\t  return index;\n\t}\n\t\n\texports['default'] = {\n\t  Record: Record,\n\t  Leader: Leader,\n\t  Field: Field,\n\t  ControlField: ControlField,\n\t  DataField: DataField,\n\t  DataSubfield: DataSubfield,\n\t  ExtendedSubfield: ExtendedSubfield\n\t};\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** junimarc.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 2a1d3f80de3e0a5f238e\n **/","/**\n * Marc leader\n * @param {String} data\n * @constructor\n */\nfunction Leader(data) {\n  this._data = data || '';\n}\n\nLeader.prototype.getData = function() {\n  return this._data;\n};\n\nLeader.prototype.setData = function(newData) {\n  this._data = newData || '';\n  return this;\n};\n\n\n/**\n * Abstrcat class for subfield\n * @param {String} id\n */\nfunction Subfield(id) {\n  if (this.constructor === Subfield) {\n    throw new Error(\"Can't instantiate abstract class\");\n  }\n\n  this._id = id || '';\n\n  _validateSubfieldIdArg(this._id);\n}\n\nSubfield.prototype.getId = function() {\n  return this._id;\n};\n\n/**\n * Data subfield in marc field\n * @param {String} id\n * @param {String} data\n * @constructor\n */\nfunction DataSubfield(id, data) {\n  Subfield.call(this, id);\n  this._data = data || '';\n}\n\nDataSubfield.prototype = Object.create(Subfield.prototype);\nDataSubfield.prototype.constructor = DataSubfield;\n\nDataSubfield.prototype.getData = function() {\n  return this._data;\n};\n\nDataSubfield.prototype.setData = function(data) {\n  this._data = data || '';\n  return this;\n};\n\nDataSubfield.prototype.toJson = function() {\n  return {\n    id: this.getId(),\n    d: this._data,\n  };\n};\n\nDataSubfield.fromJson = function(json) {\n  if (!json.id) {\n    throw new Error('DataSubfield required json id does not exist');\n  }\n\n  return new DataSubfield(json.id, json.d);\n};\n\n\n/**\n * Extended subfield\n * @param {String} id\n * @param {Array} fields\n * @constructor\n */\nfunction ExtendedSubfield(id, fields) {\n  Subfield.call(this, id);\n\n  this._fields = fields || [];\n\n  _validateFieldsArg(this._fields);\n}\n\nExtendedSubfield.prototype = Object.create(Subfield.prototype);\nExtendedSubfield.prototype.constructor = ExtendedSubfield;\n\nExtendedSubfield.prototype.getId = function() {\n  return this._id;\n};\n\nExtendedSubfield.prototype.getFields = function(tag) {\n  return _getFields(this._fields, tag);\n};\n\nExtendedSubfield.prototype.findFields = function(regexp) {\n  return _findFields(this._fields, regexp);\n};\n\nExtendedSubfield.prototype.addField = function(field) {\n  this._fields.push(field);\n  return this;\n};\n\nExtendedSubfield.prototype.removeField = function(field) {\n  var fieldIndex = this._fields.indexOf(field);\n  if (fieldIndex > -1) {\n    this._fields.splice(fieldIndex, 1);\n  }\n  return this;\n};\n\nExtendedSubfield.prototype.getFieldsIndex = function() {\n  return _buildFieldsIndex(this._fields);\n};\n\nExtendedSubfield.prototype.toJson = function() {\n  var cf = [];\n  var df = [];\n  for (var i = 0; i < this._fields.length; i++) {\n    var _field = this._fields[i];\n    if (_field instanceof DataField) {\n      df.push(_field);\n    } else {\n      cf.push(_field);\n    }\n  }\n  return {\n    id: this.getId(),\n    cf: cf,\n    df: df,\n  };\n};\n\n\nExtendedSubfield.fromJson = function(json) {\n  var fields = [];\n  var cf = json.cf || [];\n  var df = json.df || [];\n  var i = 0;\n\n  if (!Array.isArray(cf)) {\n    throw new Error('ExtendedSubfield json property cf must be array');\n  }\n\n  if (!Array.isArray(df)) {\n    throw new Error('ExtendedSubfield json property df must be array');\n  }\n\n  for (i = 0; i < cf.length; i++) {\n    fields.push(ControlField.fromJson(cf[i]));\n  }\n\n  for (i = 0; i < df.length; i++) {\n    fields.push(DataField.fromJson(df[i]));\n  }\n\n  return new ExtendedSubfield(json.id, fields);\n};\n\n\n/**\n * Abstract class for field\n * @param {String} tag\n * @param {String} data\n * @constructor\n */\nfunction Field(tag) {\n  if (this.constructor === Field) {\n    throw new Error(\"Can't instantiate abstract class\");\n  }\n\n  this._tag = tag || '';\n  _validateTagArg(this._tag);\n}\n\nField.prototype.getTag = function() {\n  return this._tag;\n};\n\n/**\n * Marc control filed\n * @param {String} tag\n * @param {String} data\n * @constructor\n */\nfunction ControlField(tag, data) {\n  Field.call(this, tag);\n  this._data = data || '';\n}\n\nControlField.prototype = Object.create(Field.prototype);\nControlField.prototype.constructor = ControlField;\n\nControlField.prototype.getData = function() {\n  return this._data;\n};\n\nControlField.prototype.setData = function(data) {\n  this._data = data || '';\n  return this;\n};\n\nControlField.prototype.toJson = function() {\n  return {\n    tag: this.getTag(),\n    d: this._data,\n  };\n};\n\nControlField.fromJson = function(json) {\n  if (!json.tag) {\n    throw new Error('ControlField required json property tag does not exist');\n  }\n  return new ControlField(json.tag, json.d);\n};\n\n\n/**\n * Field with subfields\n * @param {String} tag\n * @param {String} i1\n * @param {String} i2\n * @param {String} subfields\n * @constructor\n */\nfunction DataField(tag, i1, i2, subfields) {\n  Field.call(this, tag);\n\n  this._i1 = i1 || ' ';\n  this._i2 = i2 || ' ';\n  this._subfields = subfields || [];\n\n  _validateIndicatorArg(this._i1);\n  _validateIndicatorArg(this._i2);\n  _validateSubfieldsArg(this._subfields);\n}\n\nDataField.prototype = Object.create(Field.prototype);\nDataField.prototype.constructor = DataField;\n\nDataField.prototype.setInd1 = function(ind) {\n  this._i1 = ind || ' ';\n  _validateIndicatorArg(this._i1);\n  return this;\n};\n\nDataField.prototype.setInd2 = function(ind) {\n  this._i2 = ind || ' ';\n  _validateIndicatorArg(this._i2);\n  return this;\n};\n\nDataField.prototype.setSubfields = function(subfields) {\n  this._subfields = subfields || [];\n  _validateSubfieldsArg(this._subfields);\n  return this;\n};\n\nDataField.prototype.getSubfields = function(id) {\n  if (id) {\n    var _subfields = [];\n    var _i = 0;\n    for (_i = 0; _i < this._subfields.length; _i++) {\n      var __subfield = this._subfields[_i];\n      if (__subfield.getId() === id) {\n        _subfields.push(__subfield);\n      }\n    }\n    return _subfields;\n  }\n  return this._subfields;\n};\n\nDataField.prototype.addSubfield = function(subfield) {\n  if (!(subfield instanceof Subfield)) {\n    throw new Error('subfield must be Subfield instance');\n  }\n\n  this._subfields.push(subfield);\n  return this;\n};\n\nDataField.prototype.removeSubfield = function(subfield) {\n  var sfIndex = this._subfields.indexOf(subfield);\n  if (sfIndex > -1) {\n    subfield.splice(sfIndex, 1);\n  }\n  return this;\n};\n\nDataField.prototype.getSubfieldData = function(id) {\n  var data = [];\n  var i = 0;\n  for (i = 0; i < this._subfields.length; i++) {\n    var _subfield = this._subfields[i];\n    if (_subfield instanceof DataSubfield && _subfield.getId() === id) {\n      data.push(_subfield.getData());\n    }\n  }\n  return data;\n};\n\nDataField.prototype.getSubfieldsIndex = function() {\n  return _buildSubfieldsIndex(this._subfields);\n};\n\nDataField.prototype.toJson = function() {\n  var sf = [];\n  var esf = [];\n  var i = 0;\n\n  for (i = 0; i < this._subfields.length; i++) {\n    var _subfield = this._subfields[i];\n    if (_subfield instanceof DataSubfield) {\n      sf.push(_subfield);\n    } else {\n      esf.push(_subfield);\n    }\n  }\n\n  return {\n    tag: this.getTag(),\n    i1: this._i1,\n    i2: this._i2,\n    sf: sf,\n    esf: esf,\n  };\n};\n\nDataField.fromJson = function(json) {\n  var subfields = [];\n  var sf = json.sf || [];\n  var esf = json.esf || [];\n  var i = 0;\n\n  if (!Array.isArray(sf)) {\n    throw new Error('DataField json property sf must be array');\n  }\n\n  if (!Array.isArray(esf)) {\n    throw new Error('DataField json property esf must be array');\n  }\n\n  for (i = 0; i < sf.length; i++) {\n    subfields.push(DataSubfield.fromJson(sf[i]));\n  }\n\n  for (i = 0; i < esf.length; i++) {\n    subfields.push(ExtendedSubfield.fromJson(esf[i]));\n  }\n\n  return new DataField(json.tag, json.i1, json.i2, subfields);\n};\n\n\n/**\n *\n * @param {Leader} leader\n * @param {Array} fields\n * @constructor\n */\nfunction Record(leader, fields) {\n  this._leader = leader || new Leader();\n  this._fields = fields || [];\n\n  _validateFieldsArg(this._fields);\n}\n\nRecord.prototype.setLeader = function(leader) {\n  this._leader = leader;\n  return this;\n};\n\nRecord.prototype.getLeader = function() {\n  return this._leader;\n};\n\nRecord.prototype.setFields = function(fields) {\n  _validateFieldsArg(fields);\n  this._fields = fields;\n  return this;\n};\n\nRecord.prototype.getFields = function(tag) {\n  return _getFields(this._fields, tag);\n};\n\n\nRecord.prototype.findFields = function(regexp) {\n  return _findFields(this._fields, regexp);\n};\n\n\nRecord.prototype.addField = function(field) {\n  if (!(field instanceof Field)) {\n    throw new Error('field must be ControlField or DataField instance');\n  }\n  this._fields.push(field);\n  return this;\n};\n\nRecord.prototype.removeField = function(field) {\n  if (!(field instanceof Field)) {\n    throw new Error('field must be ControlField or DataField instance');\n  }\n  var fieldIndex = this._fields.indexOf(field);\n  if (fieldIndex > -1) {\n    this._fields.splice(fieldIndex, 1);\n  }\n  return this;\n};\n\nRecord.prototype.getFieldsIndex = function() {\n  return _buildFieldsIndex(this._fields);\n};\n\nRecord.prototype.toJson = function() {\n  var cf = [];\n  var df = [];\n  var i = 0;\n\n  for (i = 0; i < this._fields.length; i++) {\n    var _field = this._fields[i];\n    if (_field instanceof DataField) {\n      df.push(_field);\n    } else {\n      cf.push(_field);\n    }\n  }\n\n  return {\n    l: this._leader.getData(),\n    cf: cf,\n    df: df,\n  };\n};\n\n/**\n * @param {String|Object} json\n * @param {Function} callback - fn(record, error)\n * @return {Record|null}\n * @throw {Error} if no callback\n */\nRecord.fromJson = function(json, callback) {\n  if (typeof json === 'string') {\n    json = JSON.parse(json);\n  }\n\n  if (typeof json !== 'object') {\n    json = JSON.parse(json);\n    var _error = new Error('json must be object or string instance');\n    if (typeof callback === 'function') {\n      callback(null, _error);\n      return null;\n    } else {\n      throw _error;\n    }\n  }\n\n  var leader = new Leader(json.l);\n  var fields = [];\n  var cf = json.cf || [];\n  var df = json.df || [];\n  var i = 0;\n\n  try {\n    if (!Array.isArray(cf)) {\n      throw new Error('Record json property cf must be array');\n    }\n\n    if (!Array.isArray(df)) {\n      throw new Error('Record json property df must be array');\n    }\n\n    for (i = 0; i < cf.length; i++) {\n      fields.push(ControlField.fromJson(cf[i]));\n    }\n\n    for (i = 0; i < df.length; i++) {\n      fields.push(DataField.fromJson(df[i]));\n    }\n  } catch (e) {\n    if (typeof callback === 'function') {\n      callback(null, e);\n      return null;\n    } else {\n      throw _error;\n    }\n  }\n\n  if (typeof callback === 'function') {\n    callback(record, null);\n  }\n  var record = new Record(leader, fields);\n  return record;\n};\n\n\n\nfunction _validateTagArg(tag) {\n  if (typeof tag !== 'string' || !tag) {\n    throw new Error('Field must have String tag');\n  }\n}\n\nfunction _validateIndicatorArg(ind) {\n  if (typeof ind !== 'string' || ind.length !== 1) {\n    throw new Error('DataField indicator must be String from one symbol');\n  }\n}\n\nfunction _validateSubfieldsArg(subfields) {\n  if (!Array.isArray(subfields)) {\n    throw new Error('DataField subfields must be Array instance');\n  }\n\n  var i = 0;\n\n  for (i = 0; i < subfields.length; i++) {\n    var _subfield = subfields[i];\n    if (!(_subfield instanceof Subfield)) {\n      throw new Error('Subfield at index ' + i + ' must be DataSubfield or ExtendedSubfield instance');\n    }\n  }\n}\n\nfunction _validateSubfieldIdArg(id) {\n  if (typeof id !== 'string' || !id) {\n    throw new Error('DataSubfield must have id');\n  }\n}\n\nfunction _validateFieldsArg(fields) {\n  if (!Array.isArray(fields)) {\n    throw new Error('Fields of extended subfield must be Array instance');\n  }\n\n  var i = 0;\n\n  for (i = 0; i < fields.length; i++) {\n    var _field = fields[i];\n    if (!(_field instanceof Field)) {\n      throw new Error('Field at index ' + i + ' must be ControlField or DataField instance');\n    }\n  }\n}\n\n/**\n *\n * @param {Array} fields\n * @param {String} tag - filter\n * @returns {{String: Array}}\n */\nfunction _getFields(fields, tag) {\n  if (tag) {\n    var _fields = [];\n    for (var _i = 0; _i < fields.length; _i++) {\n      var _field = fields[_i];\n      if (_field.getTag() === tag) {\n        _fields.push(_field);\n      }\n    }\n    return _fields;\n  }\n  return fields;\n}\n\n/**\n *\n * @param {Array} fields\n * @param {String|Regexp} regexp - rag regexp\n * @returns {{String: Array}}\n */\nfunction _findFields(fields, regexp) {\n  var re = regexp;\n  if (!(re instanceof RegExp)) {\n    re = new RegExp(re);\n  }\n\n  var _fields = [];\n  for (var _i = 0; _i < fields.length; _i++) {\n    var _field = fields[_i];\n    if (Array.isArray(_field.getTag().match(re))) {\n      _fields.push(_field);\n    }\n  }\n  return _fields;\n}\n\n/**\n *\n * @param {Array} fields\n * @returns {{String: Array}}\n */\nfunction _buildFieldsIndex(fields) {\n  var index = {};\n  var i = 0;\n  for (i = 0; i < fields.length; i++) {\n    var _field = fields[i];\n    var _tag = _field.getTag();\n    var _existFields = index[_tag];\n\n    if (!_existFields) {\n      _existFields = [];\n      index[_tag] = _existFields;\n    }\n    _existFields.push(_field);\n  }\n  return index;\n}\n\n/**\n *\n * @param subfields\n * @returns {{String: Array}}\n */\nfunction _buildSubfieldsIndex(subfields) {\n  var index = {};\n  var i = 0;\n  for (i = 0; i < subfields.length; i++) {\n    var _subfield = subfields[i];\n    var _id = _subfield.getId();\n    var _existsubfields = index[_id];\n\n    if (!_existsubfields) {\n      _existsubfields = [];\n      index[_id] = _existsubfields;\n    }\n\n    _existsubfields.push(_subfield);\n  }\n  return index;\n}\n\n\nexport default {\n  Record,\n  Leader,\n  Field,\n  ControlField,\n  DataField,\n  DataSubfield,\n  ExtendedSubfield,\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/"],"sourceRoot":""}